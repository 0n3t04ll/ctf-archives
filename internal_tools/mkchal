#!/usr/bin/env python3

import os
import sys
import re
import subprocess
import time
import tempfile
import shutil

def is_points_or_solves(line):
  if line.lower().startswith('points:') or line.lower().startswith('solves:'):
    return True

  if 'points' in line.lower() and 'solves' in line.lower():
    return True

  return False

def get_challenge_name(args):
  tokens = []
  for a in args:
    tokens.extend(re.sub('[^0-9a-zA-Z_\- ]+', '', a).strip().split())

  return '_'.join(tokens)

if __name__ == '__main__':
  # find all the files downloaded in the past 60 seconds
  download_dir = os.path.expanduser('~/Downloads')
  files = set()
  for f in os.listdir(download_dir):
    if time.time() - os.path.getmtime(os.path.join(download_dir, f)) <= 60:
      files.add(os.path.join(download_dir, f))

  # create challenge directory
  lines = '\n'.join([l.strip() for l in sys.stdin.readlines()]).strip().split('\n')
  chal_name = get_challenge_name(lines[0].strip().split('/')[-1].strip().split())

  lines = '\n'.join(lines[1:]).strip().split('\n')
  lines = [l for l in lines if not is_points_or_solves(l)]

  shutil.rmtree(chal_name, ignore_errors=True)
  os.mkdir(chal_name)

  with open('%s/README.md' % chal_name, 'w') as f:
    f.write('\n'.join(lines[1:]).strip() + '\n')

  for f in files:
    with tempfile.TemporaryDirectory() as tmp_path:
      if f.endswith('.zip'):
        if os.system('unzip -d "%s" "%s"' % (tmp_path, f)) != 0:
          os.system('mv "%s" "%s"' % (f, chal_name))
          continue
      elif f.endswith('.tar.gz') or f.endswith('.tgz'):
        if os.system('tar xzvf "%s" -C "%s"' % (f, tmp_path)) != 0:
          os.system('mv "%s" "%s"' % (f, chal_name))
          continue
      else:
        os.system('mv "%s" "%s"' % (f, chal_name))
        continue

      os.system('rm -rf `find "%s" -name __MACOSX`' % tmp_path)

      final_path = tmp_path
      while True:
        children = os.listdir(final_path)
        if len(children) == 0 or len(children) > 1:
          break

        child_path = os.path.join(final_path, children[0])

        if not os.path.isdir(child_path):
          break

        final_path = child_path

      os.system('mv `find "%s" -name "*" -depth 1` "%s"' % (final_path, chal_name))
      os.remove(f)

  print('\n\n+++++++++++++++++++++++++++++++++++++++++++++++')
  print(chal_name)
  os.system('ls "%s"' % chal_name)
  print('+++++++++++++++++++++++++++++++++++++++++++++++\n')
  print('\n-----------------------------------------------')
  os.system('cat "%s/README.md"' % chal_name)
  print('-----------------------------------------------\n')
