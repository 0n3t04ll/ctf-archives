from Crypto.Util.number import getPrime,isPrime,GCD,bytes_to_long
from secrets import flag

p = getPrime(256)
q = getPrime(256)
phi = (p-1)*(q-1)
g = getPrime(256)
n = p*q

e = 13

p1 = getPrime(28)
p2 = getPrime(28)

K = p1*p2
gift =pow(K,e,n)
print(f"gift={gift}")

K *= g #enough padding of the key to prevent boneh durfee attacks
assert GCD(K,phi) == 1
e = pow(K,-1,phi)

cipher = pow(bytes_to_long(flag),e,n)
print(f"n={n}")
print(f"cipher={cipher}")
print(f"e={e}")
print(f"g={g}")
'''
gift=9849116110348955789479010194217500434924628821283154420120653296317850482069813955763227679617407203690983933060408814831540731516918111919543171982943742

n=10192317563100435820324883212732654109601026477813807473477878848573139071076450236118688980932037415251346520514542138140609060252895351951720245780911857

cipher=5233505605717906572820704125698007884756899600546277154250677229608622104923213916257278306210268480306253062577662108243267456434157595354492257249291619

e=6680156158150988373642322463932951077800266014102151350333710885437380635984671611153081168925510577011108052179392804404171397616499204018327041380331715

g=79311846630906367242578569989060951934653320046283047846150092277845194835891
'''
